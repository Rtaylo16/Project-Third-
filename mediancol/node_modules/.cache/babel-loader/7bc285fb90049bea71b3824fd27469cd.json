{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Project-Third-\\\\mediancol\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport CitiPicture from \"./images/CitiPicture.png\";\nimport charlotte from './images/charlotte.jpg';\nimport newYork from './images/newYork.jpg';\nconst style = {\n  main: {\n    \"backgroundImage\": `url(${CitiPicture})`,\n    \"height\": \"100%\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: 'center',\n    backgroundColor: 'rgb(74, 74, 74)',\n    backgroundSize: 'cover'\n  },\n  jumbotron: {\n    width: '50%',\n    height: '60%',\n    margin: 'auto auto',\n    opacity: .9,\n    backgroundColor: 'black',\n    backgroundSize: 'cover',\n    fontSize: '1rem',\n    fontWeight: 700\n  }\n};\nconst cityData = [{\n  name: 'Charlotte',\n  housing: 1056,\n  costOfLiving: 977,\n  avgIncome: 2653,\n  image: charlotte\n}, {\n  name: 'New York',\n  housing: 2000,\n  costOfLiving: 1292,\n  avgIncome: 4815,\n  image: newYork\n}];\n\nconst Home = () => {\n  const [currCity, setCurrCity] = useState(0);\n  useEffect(() => {\n    setInterval(() => {\n      setCurrCity(current => {\n        if (current === cityData.length - 1) {\n          return 0;\n        }\n\n        return current + 1;\n      });\n    }, 3000);\n  }, []);\n  const currentCity = cityData[currCity];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style.main,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${currentCity.image})`,\n      ...style.jumbotron\n    },\n    className: \"jumbotron text-white text-center pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \" text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, currentCity.name), /*#__PURE__*/React.createElement(PieChart, {\n    style: {\n      height: '50%'\n    },\n    data: [{\n      title: 'Two',\n      value: 100 - Math.floor((currentCity.housing + currentCity.costOfLiving) / currentCity.avgIncome * 100),\n      color: '#E38627'\n    }, {\n      title: 'Two',\n      value: Math.floor(currentCity.housing / currentCity.avgIncome * 100),\n      color: '#C13C37'\n    }, {\n      title: 'Three',\n      value: Math.floor(currentCity.costOfLiving / currentCity.avgIncome * 100),\n      color: '#6A2135'\n    }],\n    label: ({\n      dataEntry\n    }) => dataEntry.value,\n    labelStyle: index => ({\n      fill: dataMock[index].color,\n      fontSize: '5px',\n      fontFamily: 'sans-serif'\n    }),\n    radius: 42,\n    labelPosition: 112,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Average Cost of Living: $\", currentCity.housing + currentCity.costOfLiving), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Average Income: $\", currentCity.avgIncome, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Housing Cost \", (currentCity.housing / currentCity.avgIncome * 100).toFixed(2), \"% of Income \")));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Owner/Project-Third-/mediancol/src/components/Home.js"],"names":["React","useState","useEffect","PieChart","CitiPicture","charlotte","newYork","style","main","backgroundRepeat","backgroundPosition","backgroundColor","backgroundSize","jumbotron","width","height","margin","opacity","fontSize","fontWeight","cityData","name","housing","costOfLiving","avgIncome","image","Home","currCity","setCurrCity","setInterval","current","length","currentCity","backgroundImage","title","value","Math","floor","color","dataEntry","index","fill","dataMock","fontFamily","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport CitiPicture from \"./images/CitiPicture.png\"\r\nimport charlotte from './images/charlotte.jpg'\r\nimport newYork from './images/newYork.jpg'\r\nconst style = {\r\n    main: {\r\n        \"backgroundImage\": `url(${CitiPicture})`, \"height\": \"100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: 'center',\r\n        backgroundColor: 'rgb(74, 74, 74)',\r\n        backgroundSize: 'cover'\r\n    },\r\n    jumbotron: {\r\n        width: '50%',\r\n        height: '60%',\r\n        margin: 'auto auto',\r\n        opacity: .9,\r\n        backgroundColor: 'black',\r\n        backgroundSize: 'cover',\r\n        fontSize: '1rem',\r\n        fontWeight: 700\r\n    }\r\n}\r\nconst cityData = [\r\n    {\r\n        name: 'Charlotte',\r\n        housing: 1056,\r\n        costOfLiving: 977,\r\n        avgIncome: 2653,\r\n        image: charlotte\r\n    },\r\n    {\r\n        name: 'New York',\r\n        housing: 2000,\r\n        costOfLiving: 1292,\r\n        avgIncome: 4815,\r\n        image: newYork\r\n    }\r\n]\r\nconst Home = () => {\r\n    const [currCity, setCurrCity] = useState(0)\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setCurrCity(current => {\r\n                if (current === cityData.length - 1) {\r\n                    return 0\r\n                }\r\n                return current + 1\r\n            })\r\n        }, 3000)\r\n    }, [])\r\n    const currentCity = cityData[currCity]\r\n    return (\r\n        <div style={style.main} className='d-flex align-items-center' >\r\n            <div style={{ backgroundImage: `url(${currentCity.image})`, ...style.jumbotron }} className=\"jumbotron text-white text-center pt-0\">\r\n                <h1 className=' text-center'>{currentCity.name}</h1>\r\n                <PieChart style={{ height: '50%' }}\r\n                    data={[\r\n                        { title: 'Two', value: 100 - Math.floor((((currentCity.housing + currentCity.costOfLiving) / currentCity.avgIncome) * 100)), color: '#E38627' },\r\n                        { title: 'Two', value: Math.floor((currentCity.housing / currentCity.avgIncome) * 100), color: '#C13C37' },\r\n                        { title: 'Three', value: Math.floor((currentCity.costOfLiving / currentCity.avgIncome) * 100), color: '#6A2135' },\r\n                    ]}\r\n                    label={({ dataEntry }) => dataEntry.value}\r\n                    labelStyle={(index) => ({\r\n                        fill: dataMock[index].color,\r\n                        fontSize: '5px',\r\n                        fontFamily: 'sans-serif',\r\n                    })}\r\n                    radius={42}\r\n                    labelPosition={112}\r\n\r\n                />\r\n                <div >Average Cost of Living: ${currentCity.housing + currentCity.costOfLiving}</div>\r\n                <div>Average Income: ${currentCity.avgIncome} </div>\r\n                <div>Housing Cost {((currentCity.housing / currentCity.avgIncome) * 100).toFixed(2)}% of Income </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}